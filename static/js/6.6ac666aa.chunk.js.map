{"version":3,"sources":["components/forms/RegisterForm.jsx","components/login-register/Register.jsx"],"names":["minLength4","minLength","reduxForm","form","validate","props","onSubmit","handleSubmit","className","s","formBlock__inputs","error","formError","loginInput","Field","name","placeholder","label","component","TextBox","required","type","loginButton","Button","connect","state","isAuth","auth","login","isRegistered","isNewUserRegistered","register","to","ElementNameHeader","text","formBlock","LoginWelcome","values","email","password","fullName"],"mappings":"kPASMA,EAAaC,YAAU,GAkCdC,cAAU,CAACC,KAAM,WAAYC,cAA7BF,CAhCM,SAACG,GAClB,OACI,0BAAMC,SAAUD,EAAME,aAAeC,UAAWC,IAAEC,mBAC7CL,EAAMM,OAAS,yBAAKH,UAAWC,IAAEG,WAAlB,IAA+BP,EAAMM,MAArC,KAChB,yBAAKH,UAAWC,IAAEI,YAEd,kBAACC,EAAA,EAAD,CAAOC,KAAM,QAAQC,YAAY,mBAAmBC,MAAO,SAAUC,UAAWC,IAASf,SAAU,CAACgB,QAExG,yBAAKZ,UAAWC,IAAEI,YACd,kBAACC,EAAA,EAAD,CAAOC,KAAM,QAAQC,YAAY,SAASC,MAAO,SAAUC,UAAWC,IAASf,SAAU,CAACgB,QAE9F,yBAAKZ,UAAWC,IAAEI,YACd,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAAWC,YAAY,gBAAgBC,MAAO,YAAaC,UAAWC,IAAUE,KAAK,WAC1FjB,SAAU,CAACgB,IAAUpB,MAEhC,yBAAKQ,UAAWC,IAAEI,YACd,kBAACC,EAAA,EAAD,CAAOC,KAAK,YAAYC,YAAY,wBAAwBE,UAAWC,IAAUE,KAAK,WAC/EjB,SAAU,CAACgB,IAAUpB,MAEhC,yBAAKQ,UAAWC,IAAEI,YACd,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAAWC,YAAY,kBAAkBC,MAAO,aAAcC,UAAWC,IAASf,SAAU,CAACgB,QAE7G,6BACA,yBAAKZ,UAAWC,IAAEa,aACd,kBAACC,EAAA,EAAD,sB,QCaDC,sBATO,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,OACnBE,MAAOH,EAAME,KAAKC,MAClBC,aAAcJ,EAAME,KAAKG,sBAKO,CAACC,cAA1BP,CAnCE,SAACnB,GAMd,OAAIA,EAAMwB,aAEE,kBAAC,IAAD,CAAUG,GAAI,WAGtB,kBAACC,EAAA,EAAD,CAAmBC,KAAK,gBACpB,yBAAK1B,UAAWC,IAAE0B,WAChB9B,EAAMqB,OACH,kBAACU,EAAA,EAAD,uDACD,oCACI,kBAAC,EAAD,CAAc9B,SAdX,SAAC+B,GAChBhC,EAAM0B,SAASM,EAAOC,MAAOD,EAAOE,SAAUF,EAAOT,MAAOS,EAAOG,aAcvD,kBAACJ,EAAA,EAAD,wCAAkD,kBAAC,IAAD,CAASJ,GAAG,UAAZ","file":"static/js/6.6ac666aa.chunk.js","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from 'redux-form'\nimport {minLength, required, validate} from \"./forms-validators\";\n\nimport s from  './Forms.module.css'\nimport TextBox from \"./inputs-validate/TextBox\";\nimport Button from \"../instruments/buttons/Button\";\n\n\nconst minLength4 = minLength(4);\n\nconst RegisterForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}  className={s.formBlock__inputs} >\n            {props.error && <div className={s.formError}> {props.error} </div>}\n            <div className={s.loginInput}>\n\n                <Field name= \"login\" placeholder=\"Place your login\" label={\"Login:\"} component={TextBox} validate={[required]}  />\n            </div>\n            <div className={s.loginInput}>\n                <Field name= \"email\" placeholder=\"E-mail\" label={\"Email:\"} component={TextBox} validate={[required]}  />\n            </div>\n            <div className={s.loginInput}>\n                <Field name=\"password\" placeholder=\"Your password\" label={\"Password:\"} component={TextBox}  type=\"password\"\n                       validate={[required, minLength4]} />\n            </div>\n            <div className={s.loginInput}>\n                <Field name=\"password2\" placeholder=\"Confirm your password\" component={TextBox}  type=\"password\"\n                       validate={[required, minLength4]} />\n            </div>\n            <div className={s.loginInput}>\n                <Field name=\"fullName\" placeholder=\"Enter your name\" label={\"Your name:\"} component={TextBox} validate={[required]}  />\n            </div>\n            <div>\n            <div className={s.loginButton}>\n                <Button>Register</Button>\n            </div>\n            </div>\n\n\n        </form>\n    )}\n//даём уникальное имя форме логинизации и оборачиваем ХОКом\nexport default reduxForm({form: 'register', validate,\n})(RegisterForm)","import React from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {register} from \"../../redux/reducers/auth-reducer\";\nimport {NavLink, Redirect} from \"react-router-dom\";\n\nimport ElementNameHeader from \"../profile/element-name-header/ElementNameHeader\";\nimport RegisterForm from \"../forms/RegisterForm\";\n\nimport s from \"../forms/Forms.module.css\";\nimport {LoginWelcomeText} from \"./LoginWelcome\";\n\n\nconst Register = (props) => {\n\n    const formSubmit = (values) => {\n        props.register(values.email, values.password, values.login, values.fullName)\n    }\n\n    if (props.isRegistered)\n\n        return  <Redirect to={\"/login\"} />\n    else\n    return (\n        <ElementNameHeader text='registration'>\n            <div className={s.formBlock}>\n            {(props.isAuth) ?\n                 <LoginWelcomeText>You have an account and i want to logout first</LoginWelcomeText> :\n                <>\n                    <RegisterForm onSubmit={formSubmit} />\n                    <LoginWelcomeText>I have an account and i want to <NavLink to='/login'>login</NavLink></LoginWelcomeText>\n                </>\n            }\n            </div>\n        </ElementNameHeader>\n    )\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login,\n        isRegistered: state.auth.isNewUserRegistered\n    }\n}\n\n\nexport default connect(mapStateToProps, {register}) (Register);"],"sourceRoot":""}