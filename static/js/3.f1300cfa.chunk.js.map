{"version":3,"sources":["media/def_usrpic.jpg","components/instruments/buttons/FollowButton.jsx","components/profile/profile-info/ProfileInfo.module.css","components/profile/Profile.module.css","components/login-register/LoginRedirectHOC.jsx","components/profile/some-of-profile/SomeFriendsBlock.module.css","media/def_usrpic_small.jpg","components/profile/rating-counter/RateProfile.module.css","components/profile/some-of-profile/SomeFriendsBlock.js","components/profile/some-of-profile/SomePhotosBlock.js","components/profile/rating-counter/RateProfile.js","components/profile/ProfileLeftBlock.jsx","components/profile/user-status/UserStatus.jsx","components/profile/profile-info/profile-info-element/ProfileInfoElem.jsx","components/profile/profile-info/ProfileInfo.jsx","components/profile/profile-info/ProfileContacts.js","components/profile/ProfileAnalysis.js","components/profile/UpdateProfileForm.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.js"],"names":["module","exports","FollowButton","isDisabled","buttonClick","isFollow","isStretched","buttonStyle","s","follow__button","follow__button_stretched","className","onClick","disabled","mapStateToProps","state","isAuth","auth","previousLocation","withLoginRedirect","Component","withLogin","this","props","location","pathname","setLocation","to","React","withRouter","connect","BadgeHeaderHOC","users","count","pageId","name","link","style","someUsers","map","user","id","profile__small","key","profileImage","src","photos","small","userDefPic","alt","SomePhotosBlock","styled","div","PictureTitle","Description","photo","description","length","slice","Fragment","width","preview","userId","dateParse","toStrings","date","RateProfile","rateValue","perCentWidth","Math","trunc","percentValue","rateBlock","rateBlock__filled","rateBlock__empty","ProfileLeftBlock","isOwner","uploadPhoto","setEditMode","rating","friends","beginFollowing","imageSrc","large","singleProfileFollow","singleProfileUnfollow","profileFollowingFetch","leftBlock","fullName","leftBlock__profileMenu","FileUpload","onUpload","event","target","files","Link","linkName","SomeFriendsBlock","text","totalCount","profiles","photosTotalCount","UserStatus","statusText","setStatus","useState","isStatusEdit","setStatusEditMode","statusTextLocal","setStatusText","useEffect","userStatus","autoFocus","placeholder","value","onChange","onBlur","onDoubleClick","userStatus__lastUpdate","UserInfoElem","children","label","data","isExternal","profileInfo__label","profileInfo__data","UProfileInfo","aboutMe","lookingForAJob","profileInfo","ProfileInfoElem","contacts","isEdit","Object","keys","Field","component","TextBox","getFilledContactsCount","contactsCount","reduxForm","minLength","form","enableReinitialize","onSubmit","handleSubmit","profileStyle","userInfo__header","userInfo__header_edited","loginInput","loginInput__profile","validate","required","infoStyle","type","multiline","formBlock__events_cancel","onCancel","loginButton","loginButton__unshifted","Button","error","formError","Profile","setStatusRequest","uploadProfile","profileUpdateFetching","isProfileEdit","setProfileEdit","ElementNameHeader","profilePage","profileData","formProfile","initialValues","lookingForAJobDescription","ProfileAPI","editMode","uploadUserProfile","uid","match","params","myId","getStatusRequest","getProfileRequest","getFriendsById","getWallRequest","getPhotosRequest","mode","setState","prevProps","prevState","snapshot","newProps","profileFetch","Preloader","Wall","posts","postsCount","addPost","AddNewPostRequest","compose","getProfileFull","profile","getProfileFollowingFetch","getSomeFriends","getUserRating","getSomeWallPosts","wall","getSomeImages"],"mappings":"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","file":"static/js/3.f1300cfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/def_usrpic.465eaf9e.jpg\";","import s from './Buttons.module.css';\nimport React from \"react\";\n\nconst FollowButton = ({isDisabled, buttonClick, isFollow, isStretched}) => {\n    let buttonStyle = s.follow__button;\n    if (isStretched) buttonStyle += \" \" + s.follow__button_stretched;\n    if (isFollow ) {\n        return <button className={buttonStyle} onClick={buttonClick} disabled={isDisabled}>Stop following</button>;\n    } else {\n        return <button className={buttonStyle} onClick={buttonClick} disabled={isDisabled}>Follow user</button>;\n    }\n}\nexport default FollowButton;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__1_Ogf\",\"profileInfo__label\":\"ProfileInfo_profileInfo__label__3Zwp_\",\"profileInfo__data\":\"ProfileInfo_profileInfo__data__1aAll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"Profile_profilePage__366-F\",\"profileData\":\"Profile_profileData__lNJms\",\"userInfo__header\":\"Profile_userInfo__header__yIqv2\",\"userInfo__header_edited\":\"Profile_userInfo__header_edited__DyKol\",\"leftBlock\":\"Profile_leftBlock__3jHU2\",\"leftBlock__profileMenu\":\"Profile_leftBlock__profileMenu__hLKSE\"};","import React from \"react\";\nimport {connect} from \"react-redux\";\n\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport {setLocation} from \"../../redux/reducers/auth-reducer\";\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        previousLocation: state.auth.previousLocation\n    }\n}\n\nconst withLoginRedirect = (Component) => {\n\n    class withLogin extends React.Component {\n        render() {\n            if (! this.props.previousLocation || this.props.previousLocation !== this.props.location.pathname) {\n                this.props.setLocation(this.props.location.pathname)\n            }\n\n            if (this.props.isAuth)\n                return <Component {...this.props}/>\n            else\n                return <Redirect to={'login'} />\n        }\n    }\n    return withRouter(connect(mapStateToProps, {setLocation})(withLogin))\n}\n\nexport default (withLoginRedirect)\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someUsers\":\"SomeFriendsBlock_someUsers__3NC-a\",\"profile__small\":\"SomeFriendsBlock_profile__small__1DUO7\",\"profileImage\":\"SomeFriendsBlock_profileImage__2Irdt\"};","module.exports = __webpack_public_path__ + \"static/media/def_usrpic_small.d63d672f.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"percentValue\":\"RateProfile_percentValue__3ddfL\",\"rateBlock\":\"RateProfile_rateBlock__2PCYi\",\"rateBlock__filled\":\"RateProfile_rateBlock__filled__3gJiY\",\"rateBlock__empty\":\"RateProfile_rateBlock__empty__2LJQZ\"};","import React from \"react\";\r\n\r\nimport style from \"./SomeFriendsBlock.module.css\"\r\nimport userDefPic from \"../../../media/def_usrpic_small.jpg\"\r\n\r\nimport BadgeHeaderHOC from \"../Widjet/BadgeHeader\";\r\nimport BadgeSubHeader from \"../Widjet/BadjeSubHeader\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst SomeFriends = ({users, count, pageId}) => {\r\n    return (\r\n        <>\r\n            <BadgeSubHeader count={count} name={(count === 1) ? \"friend\" : \"friends\"} link={\"/friends\" + pageId} />\r\n        <div className={style.someUsers}>\r\n            {\r\n                users.map(user => {\r\n                    return (<NavLink to={'/id' + user.id} className={style.profile__small}  key={user.id}>\r\n                            <div className={style.profileImage} key={user.id}>\r\n                                <img\r\n                                    src={user.photos.small ? user.photos.small : userDefPic}\r\n                                    alt={\"id\" + user.id + \" small userpic\"}/>\r\n                            </div>\r\n                            {user.name}\r\n                        </NavLink>\r\n                    )\r\n                })}\r\n        </div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default BadgeHeaderHOC(SomeFriends);","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport BadgeHeaderHOC from \"../Widjet/BadgeHeader\";\r\nimport BadgeSubHeader from \"../Widjet/BadjeSubHeader\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\"\r\nimport {dateParse} from \"../../../utils/date\";\r\nimport {DateText} from \"../../instruments/styles/Styles\";\r\n\r\n\r\nconst SomePhotosBlock = styled.div`\r\n    display: grid;\r\n    grid-gap: 5px;\r\n    grid-template-columns: 90px auto;\r\n    text-align: left;\r\n`;\r\n\r\nconst PictureTitle = styled.div`\r\n    \r\n    word-break: break-word;\r\n    font-weight: bold;\r\n`\r\n\r\nconst Description = ({photo}) => {\r\n    return(\r\n    (photo.description.length > 51) ?\r\n\r\n        <>{photo.description.slice(0, 50)}&hellip;</>\r\n        :\r\n        <>{photo.description}</>\r\n    )\r\n}\r\n\r\n//show some photos on profile page\r\nconst SomePhotos = ({photos, count, pageId}) => {\r\n\r\n    return (\r\n        <>\r\n            <BadgeSubHeader count={count} name={(count === 1) ? \"photo\" : \"photos\"} link={\"/photos\" + pageId} />\r\n        <SomePhotosBlock >\r\n            {\r\n                photos.map(photo => {\r\n                    return (\r\n                        <React.Fragment key={photo.id}>\r\n                        <NavLink key={photo.id} to={'/photos' + pageId}  key={pageId}>\r\n                                <img\r\n                                    width={\"80px\"}\r\n                                    src={photo.preview}\r\n                                    alt={`id ${photo.userId} photo`}/>\r\n\r\n                         </NavLink>\r\n                         <div key={photo.id} >\r\n                             <PictureTitle><Description photo={photo}/></PictureTitle> <br/>\r\n                             <DateText>Uploaded { dateParse.toStrings(photo.date) }</DateText>\r\n                         </div>\r\n                     </React.Fragment>\r\n                    )\r\n                })}\r\n        </SomePhotosBlock>\r\n            </>\r\n    )\r\n}\r\n\r\nSomePhotos.propTypes = {\r\n    photos: PropTypes.array,\r\n    count: PropTypes.number,\r\n    pageId: PropTypes.number,\r\n}\r\n\r\nexport default BadgeHeaderHOC(SomePhotos);","import React from \"react\";\r\n\r\nimport style from \"./RateProfile.module.css\"\r\n\r\n\r\nconst RateProfile = ({rateValue}) => {\r\n    const blockWidth = 199;\r\n\r\n    const perCentWidth = Math.trunc(blockWidth * rateValue / 100);\r\n\r\n    return (\r\n        <>\r\n           <div className={style.percentValue}>{rateValue + \"%\"}</div>\r\n           <div className={style.rateBlock}>\r\n               <div style={{width: perCentWidth}} className={style.rateBlock__filled}></div>\r\n               <div style={{width: blockWidth - perCentWidth}} className={style.rateBlock__empty}></div>\r\n           </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RateProfile;","import React from 'react';\nimport s from  './Profile.module.css'\n\nimport userDefPic from '../../media/def_usrpic.jpg'\nimport Link from \"../instruments/link/Link\";\nimport FollowButton from \"../instruments/buttons/FollowButton\";\n\nimport FileUpload from \"../forms/FileUpload\";\nimport SomeFriendsBlock from \"./some-of-profile/SomeFriendsBlock\";\nimport SomePhotosBlock from \"./some-of-profile/SomePhotosBlock\";\nimport RateProfile from \"./rating-counter/RateProfile\";\n\n\nconst ProfileLeftBlock = ({user, isOwner, uploadPhoto, setEditMode, rating, friends, beginFollowing, ...props}) => {\n\n    let imageSrc = (user.photos.large) ? user.photos.large : userDefPic\n\n    const handleFileUpload = (event) => {\n        if (event.target.files.length)\n            uploadPhoto(event.target.files[0])\n    }\n\n    let {singleProfileFollow, singleProfileUnfollow, profileFollowingFetch} = props;\n\n    const handleFollowUser = () => {\n        if (user.isFollow)\n            singleProfileUnfollow(user.userId)\n        else\n            singleProfileFollow(user.userId)\n    }\n\n\n    return (\n        <div className={s.leftBlock}>\n            <img src={imageSrc} alt={user.fullName + ' profile photo'} width='210px'/>\n            <ul className={s.leftBlock__profileMenu}>\n                {isOwner ?\n                <>\n                    <li key={\"fileUpload\"}>\n                        <FileUpload onUpload={handleFileUpload}>\n                            <Link linkName={\"Upload new user photo\"}/>\n                        </FileUpload>\n                    </li>\n                    <li key={\"editProfile\"}>\n                        <Link linkName='Edit my profile' onClick={setEditMode}/>\n                    </li>\n\n                </>\n                  :<>\n                        <li key={\"writeTo\"}>\n                            <Link linkName={\"Send message to \" + user.fullName} to={\"/dialog\" + user.userId}/>\n                        </li>\n                        <li key={\"followUser\"}>\n                            <FollowButton isFollow={user.isFollow} isStretched={true} buttonClick={handleFollowUser} isDisabled={profileFollowingFetch} />\n                        </li>\n                   </>\n                }\n            </ul>\n            <RateProfile rateValue={rating}/>\n            <SomeFriendsBlock text={\"Friends\"} count={friends.totalCount} users={friends.profiles} pageId={user.userId} />\n            <SomePhotosBlock  text={\"Photos\"} count={props.photosTotalCount} photos={props.photos} pageId={user.userId} />\n\n        </div>)\n}\n\nexport default ProfileLeftBlock;","import React, {useState, useEffect} from \"react\";\n\nimport s from  './UserStatus.module.css'\n\nconst UserStatus = ({statusText, setStatus, isOwner}) => {\n    let [isStatusEdit, setStatusEditMode] = useState(false)\n    let [statusTextLocal, setStatusText] = useState(statusText)\n\n    useEffect(() => {\n        setStatusText(statusText)\n    }, [statusText]);\n\n    let handleAllowEdit = () => {\n        setStatusEditMode(true);\n    }\n    let handleEndEdit = (event) => {\n        setStatusEditMode(false);\n        //server post request here\n        setStatus(statusTextLocal)\n    }\n\n    let handleEditStatus = (event) => {\n        setStatusText(event.target.value)\n    }\n\n    return (<div className={s.userStatus}>\n        {isStatusEdit ? <input autoFocus placeholder=\"Change status\" value={statusTextLocal} onChange={handleEditStatus}\n                               onBlur={handleEndEdit}/> :\n            <>\n                { isOwner ?\n                    <a onDoubleClick={handleAllowEdit}>{(!statusText || statusText.length < 1) ? 'Create your status!' : statusText}</a> :\n                    <a> {statusText}</a>\n                }\n                <div className={s.userStatus__lastUpdate}>\n                    updated 5 years ago\n                </div>\n            </>\n        }\n    </div>);\n\n}\n\nexport default UserStatus;","import React from \"react\";\nimport s from '../ProfileInfo.module.css'\nimport Link from \"../../../instruments/link/Link\";\n\n//если есть ссылка отрисовывать с линком, доработать функционал для дат\nconst UserInfoElem = ({link, children, label}) => {\n\n    let data = (!link) ? <>{children}</> : <Link to={link} linkName={children} isExternal={true}/>\n\n    return (\n        <>\n            <div className={s.profileInfo__label}>{label}</div>\n            <div className={s.profileInfo__data}>\n                {data}\n            </div>\n        </>\n    )\n}\n\nexport  default UserInfoElem;","import React from \"react\";\n\nimport s from  './ProfileInfo.module.css'\nimport ProfileInfoElem from \"./profile-info-element/ProfileInfoElem\";\n\nconst UProfileInfo = ({aboutMe, lookingForAJob, description}) => {\n    return (\n        <div className={s.profileInfo}>\n                <ProfileInfoElem label='About me:'>{aboutMe}</ProfileInfoElem>\n                <ProfileInfoElem label='Looking for a job:'> {(lookingForAJob)?'Yes':'No'}</ProfileInfoElem>\n                <ProfileInfoElem label='Professional skills:'>{description} </ProfileInfoElem>\n        </div>\n    )\n}\n\nexport default UProfileInfo;\n\n/*\n{props.infoElems.map(\n                (elem) => {\n                    if (elem.data)\n                    return <UserInfoElem userInfoItem={elem}/>\n                }\n            )}\n */","import React from \"react\";\n\nimport s from  './ProfileInfo.module.css'\n\nimport {Field} from \"redux-form\";\n\nimport ProfileInfoElem from \"./profile-info-element/ProfileInfoElem\";\nimport BadgeHeaderHOC from \"../Widjet/BadgeHeader\";\nimport TextBox from \"../../forms/inputs-validate/TextBox\";\n\n\n/*contacts: {github: 'git.com' , website: \"www.website.com\", twi: null}*/\nconst UProfileContacts = ({contacts, isEdit}) => {\n    if (!contacts) return <div></div>\n    if (isEdit)\n    return (\n\n    <div className={s.profileInfo}>\n        {\n            Object.keys(contacts).map(key => {\n                    return <ProfileInfoElem label={key}  key={key}><Field name={'contacts.' + key} component={TextBox}/></ProfileInfoElem>\n            })}\n    </div>\n\n    )\n    else\n        return (\n            <div className={s.profileInfo}>\n                {\n                    Object.keys(contacts).map(key => {\n                        if (contacts[key])\n                            return <ProfileInfoElem link={contacts[key]} label={key} key={key}> {contacts[key]} </ProfileInfoElem>\n                    })}\n            </div>\n        )\n}\n\nexport default BadgeHeaderHOC(UProfileContacts);","export const getFilledContactsCount = (contacts) => {\r\n    let contactsCount = 0;\r\n    Object.keys(contacts).map( (key) => { if ((key) && contacts[key]) contactsCount++})\r\n    return contactsCount;\r\n}","import React from 'react';\n\nimport s from '../forms/Forms.module.css'\nimport profileStyle from  './Profile.module.css'\nimport infoStyle from './profile-info/ProfileInfo.module.css'\n\nimport {Field, reduxForm} from 'redux-form'\nimport {minLength, required} from \"../forms/forms-validators\";\n\nimport {getFilledContactsCount} from \"./ProfileAnalysis\";\n\nimport TextBox from \"../forms/inputs-validate/TextBox\";\nimport Button from \"../instruments/buttons/Button\";\nimport ProfileInfoElem from \"./profile-info/profile-info-element/ProfileInfoElem\";\nimport UProfileContacts from \"./profile-info/ProfileContacts\";\nimport Link from \"../instruments/link/Link\";\n\n\nconst minLength4 = minLength(4);\n\n//children - блок со статусом\nconst UpdateProfileForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit} >\n            <div className={profileStyle.userInfo__header}>\n                <div className={profileStyle.userInfo__header_edited}>\n                    <span>Your full name:</span>\n                    <div className={s.loginInput + ' ' + s.loginInput__profile}>\n                        <Field name=\"fullName\" component={TextBox} validate={[required]}/>\n                    </div>\n                </div>\n\n                {props.children}\n\n            </div>\n            <div>\n                <div className={infoStyle.profileInfo}>\n                    <ProfileInfoElem label='About me:'><Field name=\"aboutMe\" component={TextBox}/></ProfileInfoElem>\n                    <ProfileInfoElem label='Looking for a job:'><Field name=\"lookingForAJob\" component=\"input\"\n                                                                       type=\"checkbox\"/></ProfileInfoElem>\n                    <ProfileInfoElem label='Professional skills'><Field name=\"lookingForAJobDescription\"\n                                                                        component={TextBox}\n                                                                        multiline={true}/></ProfileInfoElem>\n                </div>\n\n                <UProfileContacts contacts={props.user.contacts} isEdit={true} text='contacts'\n                                  count={getFilledContactsCount(props.user.contacts)}/>\n\n\n                    <div className={s.formBlock__events_cancel}>\n                        <Link linkName='Cancel' onClick={props.onCancel}/>\n                    </div>\n                    <div className={s.loginButton + \" \" + s.loginButton__unshifted}>\n                        <Button>Save changes</Button>\n                    </div>\n\n                {props.error && <div className={s.formError}> {props.error} </div>}\n\n\n            </div>\n        </form>\n    )\n}\n//даём уникальное имя форме логинизации и оборачиваем ХОКом\nexport default reduxForm({form: 'updateProfile', enableReinitialize: true})(UpdateProfileForm)\n","import React, {useState, useEffect} from 'react';\nimport s from  './Profile.module.css'\n\nimport ElementNameHeader from \"./element-name-header/ElementNameHeader\";\nimport ProfileLeftBlock from \"./ProfileLeftBlock\";\n\nimport UserStatus from \"./user-status/UserStatus\";\nimport UProfileInfo from \"./profile-info/ProfileInfo\";\nimport UProfileContacts from \"./profile-info/ProfileContacts\";\n\nimport UpdateProfileForm from \"./UpdateProfileForm\";\n\nimport {getFilledContactsCount} from \"./ProfileAnalysis\";\n\n\nconst Profile = ({user, setStatusRequest, statusText, isOwner, uploadProfile, isEdit, profileUpdateFetching, ...props}) => {\n\n    let [isProfileEdit, setProfileEdit] = useState(false)\n\n    useEffect( () => {\n        setProfileEdit(isEdit)\n    }, [isEdit])\n\n    const handleSetMode = () => {\n        setProfileEdit(true)\n    }\n\n    const profileChangeSubmit = (formProfile) => {\n        uploadProfile(formProfile)\n    }\n\n    const profileCloseEdit = () => {\n        setProfileEdit(false)\n    }\n\n    return (\n        <ElementNameHeader text={user.fullName} >\n            <div className={s.profilePage}>\n                <ProfileLeftBlock user={user} isOwner={isOwner} setEditMode={handleSetMode}  {...props} />\n                <div className={s.profileData}>\n                    {(isProfileEdit && isOwner) ?\n                        <UpdateProfileForm onSubmit={profileChangeSubmit} user={user} initialValues={user} onCancel={profileCloseEdit} >\n                            <UserStatus statusText={statusText} />\n                            {profileUpdateFetching && <h2>profile updating...</h2>}\n                        </UpdateProfileForm>\n                        :\n                    <>\n                        <div className={s.userInfo__header}>\n                            {user.fullName}\n                            <UserStatus statusText={statusText} setStatus={setStatusRequest} isOwner={isOwner} />\n                        </div>\n\n                        <UProfileInfo lookingForAJob={user.lookingForAJob} aboutMe={user.aboutMe}\n                                  description={user.lookingForAJobDescription} />\n\n                        <UProfileContacts text='Contacts' contacts={user.contacts} count={getFilledContactsCount(user.contacts)}/>\n\n                        {props.children}\n                    </>\n                    }\n\n                </div>\n            </div>\n        </ElementNameHeader>\n    )\n}\n\nexport default Profile;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {withRouter} from \"react-router-dom\";\n\nimport {getSomeFriends} from \"../../redux/selectors/users-selector\";\nimport {getProfileFollowingFetch, getProfileFull, getUserRating} from \"../../redux/selectors/profile-selector\";\nimport {getSomeWallPosts} from \"../../redux/selectors/wall-selector\";\n\nimport {getSomeImages} from \"../../redux/selectors/photos-selector\";\n\nimport {\n    getProfileRequest,\n    getStatusRequest,\n    setStatusRequest,\n    singleProfileFollow, singleProfileUnfollow,\n    uploadPhoto,\n    uploadProfile\n} from \"../../redux/reducers/profile-reducer\";\n\nimport {getFriendsById} from \"../../redux/reducers/users-reducer\";\nimport {AddNewPostRequest, getWallRequest} from \"../../redux/reducers/wall-reducer\";\n\nimport {getPhotosRequest} from \"../../redux/reducers/images-reducer\";\n\nimport Profile from \"./Profile\";\n\nimport Preloader from \"../instruments/Preloader\";\nimport Wall from \"./wall/Wall\";\n\nimport withLoginRedirect from \"../login-register/LoginRedirectHOC\";\n\n\nclass ProfileAPI extends React.Component {\n\n    state = {editMode: false}\n\n    uploadUserProfile = () => {\n        let uid = this.props.match.params.userId || this.props.myId;\n        this.props.getStatusRequest(uid);\n        this.props.getProfileRequest(uid);\n\n        this.props.getFriendsById(1, uid);\n\n        this.props.getWallRequest(uid)\n\n        this.props.getPhotosRequest(uid);\n    }\n\n    setEditMode = (mode) => {\n        this.setState({editMode: mode || false})\n    }\n\n    componentDidMount() {\n        this.setEditMode(this.props.isEdit)\n        this.uploadUserProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if (prevProps.match.params.userId != this.props.match.params.userId)\n            this.uploadUserProfile()\n\n        if (prevProps.profileUpdateFetching && !this.props.profileUpdateFetching)\n            this.setEditMode(false)\n\n        if (!prevProps.profileUpdateFetching && this.props.profileUpdateFetching)\n            this.setEditMode(true)\n    }\n\n    render() {\n        let {match, getProfileRequest, getFriendsById, isEdit, ...newProps} = this.props;\n\n\n        if (this.props.profileFetch) return (<Preloader/>)\n        else return (\n            <Profile  {...newProps} isEdit={this.state.editMode}\n                      isOwner={(this.props.isAuth && ((match.params.userId == this.props.myId) || isEdit))}>\n                <Wall text={\"Wall\"} isAuth={true} pageId={newProps.user.userId}\n                      posts={this.props.posts} count={this.props.postsCount}\n                      addPost={this.props.AddNewPostRequest}\n                />\n            </Profile>)\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        user: getProfileFull(state),\n        statusText: state.profile.statusText,\n        profileUpdateFetching: state.profile.profileUpdateFetching,\n        myId: state.auth.myId,\n        isAuth: state.auth.isAuth,\n\n        profileFetch: state.profile.profileFetch,\n        profileFollowingFetch: getProfileFollowingFetch(state),\n\n        friends: getSomeFriends(state),\n        rating: getUserRating(state),\n\n        //wall state\n        posts: getSomeWallPosts(state),\n        postsCount: state.wall.totalCount,\n\n        //photos state\n        photos: getSomeImages(state),\n        photosTotalCount: state.photos.totalCount\n    }\n}\n\nexport default compose(withRouter, withLoginRedirect, connect(mapStateToProps, {\n    setStatusRequest,\n    getProfileRequest,\n    getStatusRequest,\n    uploadProfile,\n    uploadPhoto,\n    getFriendsById,\n\n    singleProfileFollow,\n    singleProfileUnfollow,\n\n    AddNewPostRequest,\n    getWallRequest,\n\n    getPhotosRequest\n}))(ProfileAPI)"],"sourceRoot":""}